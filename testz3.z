(declare-sort T335)
(declare-fun set143 (Bool) Bool)
(declare-fun slist (T335 Bool) Bool)
(declare-fun nil () T335)
(declare-fun slen (T335) Int)
(declare-fun shd (T335) Int)
(declare-fun x0 () Int)
(declare-fun _lbv0 () Int)
(declare-fun s () Int)
(declare-fun _lbv1 () Int)
(declare-fun |0| () Int)
(declare-fun _lbv2 () Bool)
(declare-fun _lbv3 () Bool)
(declare-fun _lbv4 () Bool)
(declare-fun _lbv5 () Bool)
(declare-fun var_v5 () Bool)
(declare-fun _lbv6 () Int)
(declare-fun _lbv7 () Int)
(declare-fun set144 (Bool) Bool)
(declare-fun _lbv8 () T335)
(declare-fun set145 (Bool) Bool)
(declare-fun _lbv9 () T335)
(declare-fun set146 (Bool) Bool)
(declare-fun _lbv10 () T335)
(declare-fun set147 (Bool) Bool)
(declare-fun _lbv11 () T335)
(declare-fun set148 (Bool) Bool)
(declare-fun _lbv12 () T335)
(declare-fun set149 (Bool) Bool)
(declare-fun _lbv13 () T335)
(declare-fun set150 (Bool) Bool)
(declare-fun v () T335)
(declare-fun set151 (Bool) Bool)
(declare-fun set152 (Bool) Bool)
(declare-fun set153 (Bool) Bool)
(assert (forall ((bv0 Bool)) (= (set143 bv0) (and (= bv0 true)))))
(assert (forall ((bv0 Bool)) (= (slist nil bv0) (set143 bv0))))
(assert (= (slen nil) 0))
(assert (= (shd nil) 0))
(assert (or (> _lbv0 x0) (= _lbv0 x0)))
(assert (or (> _lbv1 s) (= _lbv1 s)))
(assert (= |0| 0))
(assert (= |0| 0))
(assert (= (= _lbv2 true) (and (= x0 |0|) (= (= _lbv2 false) (> x0 |0|)))))
(assert (= |0| 0))
(assert (= |0| 0))
(assert (= (= _lbv3 true) (and (= s |0|) (= (= _lbv3 false) (> s |0|)))))
(assert (= |0| 0))
(assert (= |0| 0))
(assert (= (= _lbv4 true) (and (= _lbv1 |0|) (= (= _lbv4 false) (> _lbv1 |0|)))))
(assert (= |0| 0))
(assert (= |0| 0))
(assert (= (= _lbv5 true) (and (= _lbv0 |0|) (= (= _lbv5 false) (> _lbv0 |0|)))))
(assert (= |0| 0))
(assert (= |0| 0))
(assert (= (= var_v5 true) (and (= _lbv0 |0|) (= (= var_v5 false) (> _lbv0 |0|)))))
(assert (= _lbv6 (- s 1)))
(assert (or (> _lbv7 _lbv6) (= _lbv7 _lbv6)))
(assert (forall ((bv0 Bool)) (= (set144 bv0) (and (= bv0 true)))))
(assert (forall ((bv0 Bool)) (= (slist _lbv8 bv0) (set144 bv0))))
(assert (= (slen _lbv8) _lbv6))
(assert (or (> (shd _lbv8) _lbv7) (= (shd _lbv8) _lbv7) (= (shd _lbv8) 0)))
(assert (forall ((bv0 Bool)) (= (set145 bv0) (and (= bv0 true)))))
(assert (forall ((bv0 Bool)) (= (slist _lbv9 bv0) (set145 bv0))))
(assert (= (slen _lbv9) _lbv6))
(assert (or (> (shd _lbv9) _lbv6) (= (shd _lbv9) _lbv6) (= (shd _lbv9) 0)))
(assert (forall ((bv0 Bool)) (= (set146 bv0) (and (= bv0 true)))))
(assert (forall ((bv0 Bool)) (= (slist _lbv10 bv0) (set146 bv0))))
(assert (= (slen _lbv10) _lbv6))
(assert (or (> (shd _lbv10) _lbv1) (= (shd _lbv10) _lbv1) (= (shd _lbv10) 0)))
(assert (forall ((bv0 Bool)) (= (set147 bv0) (and (= bv0 true)))))
(assert (forall ((bv0 Bool)) (= (slist _lbv11 bv0) (set147 bv0))))
(assert (= (slen _lbv11) _lbv6))
(assert (or (> (shd _lbv11) _lbv0) (= (shd _lbv11) _lbv0) (= (shd _lbv11) 0)))
(assert (forall ((bv0 Bool)) (= (set148 bv0) (and (= bv0 true)))))
(assert (forall ((bv0 Bool)) (= (slist _lbv12 bv0) (set148 bv0))))
(assert (= (slen _lbv12) _lbv6))
(assert (or (> (shd _lbv12) x0) (= (shd _lbv12) x0) (= (shd _lbv12) 0)))
(assert (forall ((bv0 Bool)) (= (set149 bv0) (and (= bv0 true)))))
(assert (forall ((bv0 Bool)) (= (slist _lbv13 bv0) (set149 bv0))))
(assert (= (slen _lbv13) _lbv6))
(assert (or (> (shd _lbv13) s) (= (shd _lbv13) s) (= (shd _lbv13) 0)))
(assert (forall ((bv0 Bool)) (= (set150 bv0) (and (= bv0 true)))))
(assert (let ((a!1 (and (forall ((bv0 Bool)) (= (slist v bv0) (set150 bv0)))
                (= (slen v) (+ (slen nil) 1))
                (= (shd v) _lbv7))))
  (=> (or (> (shd nil) _lbv7) (= (shd nil) _lbv7)) a!1)))
(assert (= var_v5 true))
(assert (= |0| 0))
(assert (= |0| 0))
(assert (= (= var_v5 true) (and (= _lbv0 |0|) (= (= var_v5 false) (> _lbv0 |0|)))))
(assert (or (> _lbv7 _lbv6) (= _lbv7 _lbv6)))
(assert (forall ((bv0 Bool)) (= (set151 bv0) (and (= bv0 true)))))
(assert (forall ((bv0 Bool)) (= (slist nil bv0) (set151 bv0))))
(assert (= (slen nil) 0))
(assert (= (shd nil) 0))
(assert (forall ((bv0 Bool)) (= (set152 bv0) (and (= bv0 true)))))
(assert (let ((a!1 (and (forall ((bv0 Bool)) (= (slist v bv0) (set152 bv0)))
                (= (slen v) (+ (slen nil) 1))
                (= (shd v) _lbv7))))
  (=> (or (> (shd nil) _lbv7) (= (shd nil) _lbv7)) a!1)))
(assert (forall ((bv0 Bool)) (= (set153 bv0) (and (= bv0 true)))))
(assert (let ((a!1 (and (forall ((bv0 Bool)) (= (slist v bv0) (set153 bv0)))
                (= (slen v) s)
                (or (> (shd v) x0) (= (shd v) x0) (= (shd v) 0)))))
  (not a!1)))
(check-sat)