(declare-sort T345)
(declare-fun set165 (Bool) Bool)
(declare-fun slist (T345 Bool) Bool)
(declare-fun nil () T345)
(declare-fun slen (T345) Int)
(declare-fun shd (T345) Int)
(declare-fun x0 () Int)
(declare-fun _lbv0 () Int)
(declare-fun s () Int)
(declare-fun _lbv1 () Int)
(declare-fun |0| () Int)
(declare-fun _lbv2 () Bool)
(declare-fun _lbv3 () Bool)
(declare-fun _lbv4 () Bool)
(declare-fun _lbv5 () Bool)
(declare-fun var_v5 () Bool)
(declare-fun _lbv6 () Int)
(declare-fun _lbv7 () Int)
(declare-fun set166 (Bool) Bool)
(declare-fun _lbv8 () T345)
(declare-fun set167 (Bool) Bool)
(declare-fun _lbv9 () T345)
(declare-fun set168 (Bool) Bool)
(declare-fun _lbv10 () T345)
(declare-fun set169 (Bool) Bool)
(declare-fun _lbv11 () T345)
(declare-fun set170 (Bool) Bool)
(declare-fun _lbv12 () T345)
(declare-fun set171 (Bool) Bool)
(declare-fun _lbv13 () T345)
(declare-fun set172 (Bool) Bool)
(declare-fun v () T345)
(declare-fun set173 (Bool) Bool)
(declare-fun set174 (Bool) Bool)
(declare-fun set175 (Bool) Bool)
(assert (forall ((bv0 Bool)) (= (set165 bv0) (and (= bv0 true)))))
(assert (forall ((bv0 Bool)) (= (slist nil bv0) (set165 bv0))))
(assert (= (slen nil) 0))
(assert (= (shd nil) 0))
(assert (or (> _lbv0 x0) (= _lbv0 x0)))
(assert (or (> _lbv1 s) (= _lbv1 s)))
(assert (= |0| 0))
(assert (= |0| 0))
(assert (= (= _lbv2 true) (and (= x0 |0|) (= (= _lbv2 false) (> x0 |0|)))))
(assert (= |0| 0))
(assert (= |0| 0))
(assert (= (= _lbv3 true) (and (= s |0|) (= (= _lbv3 false) (> s |0|)))))
(assert (= |0| 0))
(assert (= |0| 0))
(assert (= (= _lbv4 true) (and (= _lbv1 |0|) (= (= _lbv4 false) (> _lbv1 |0|)))))
(assert (= |0| 0))
(assert (= |0| 0))
(assert (= (= _lbv5 true) (and (= _lbv0 |0|) (= (= _lbv5 false) (> _lbv0 |0|)))))
(assert (= |0| 0))
(assert (= |0| 0))
(assert (= (= var_v5 true) (and (= _lbv0 |0|) (= (= var_v5 false) (> _lbv0 |0|)))))
(assert (= _lbv6 (- s 1)))
(assert (or (> _lbv7 _lbv6) (= _lbv7 _lbv6)))
(assert (forall ((bv0 Bool)) (= (set166 bv0) (and (= bv0 true)))))
(assert (forall ((bv0 Bool)) (= (slist _lbv8 bv0) (set166 bv0))))
(assert (= (slen _lbv8) _lbv6))
(assert (or (> (shd _lbv8) _lbv7) (= (shd _lbv8) _lbv7) (= (shd _lbv8) 0)))
(assert (forall ((bv0 Bool)) (= (set167 bv0) (and (= bv0 true)))))
(assert (forall ((bv0 Bool)) (= (slist _lbv9 bv0) (set167 bv0))))
(assert (= (slen _lbv9) _lbv6))
(assert (or (> (shd _lbv9) _lbv6) (= (shd _lbv9) _lbv6) (= (shd _lbv9) 0)))
(assert (forall ((bv0 Bool)) (= (set168 bv0) (and (= bv0 true)))))
(assert (forall ((bv0 Bool)) (= (slist _lbv10 bv0) (set168 bv0))))
(assert (= (slen _lbv10) _lbv6))
(assert (or (> (shd _lbv10) _lbv1) (= (shd _lbv10) _lbv1) (= (shd _lbv10) 0)))
(assert (forall ((bv0 Bool)) (= (set169 bv0) (and (= bv0 true)))))
(assert (forall ((bv0 Bool)) (= (slist _lbv11 bv0) (set169 bv0))))
(assert (= (slen _lbv11) _lbv6))
(assert (or (> (shd _lbv11) _lbv0) (= (shd _lbv11) _lbv0) (= (shd _lbv11) 0)))
(assert (forall ((bv0 Bool)) (= (set170 bv0) (and (= bv0 true)))))
(assert (forall ((bv0 Bool)) (= (slist _lbv12 bv0) (set170 bv0))))
(assert (= (slen _lbv12) _lbv6))
(assert (or (> (shd _lbv12) x0) (= (shd _lbv12) x0) (= (shd _lbv12) 0)))
(assert (forall ((bv0 Bool)) (= (set171 bv0) (and (= bv0 true)))))
(assert (forall ((bv0 Bool)) (= (slist _lbv13 bv0) (set171 bv0))))
(assert (= (slen _lbv13) _lbv6))
(assert (or (> (shd _lbv13) s) (= (shd _lbv13) s) (= (shd _lbv13) 0)))
(assert (forall ((bv0 Bool)) (= (set172 bv0) (and (= bv0 true)))))
(assert (let ((a!1 (and (forall ((bv0 Bool)) (= (slist v bv0) (set172 bv0)))
                (= (slen v) (+ (slen _lbv12) 1))
                (= (shd v) _lbv7))))
  (=> (or (> (shd _lbv12) _lbv7) (= (shd _lbv12) _lbv7)) a!1)))
(assert (= var_v5 true))
(assert (= |0| 0))
(assert (= |0| 0))
(assert (= (= var_v5 true) (and (= _lbv0 |0|) (= (= var_v5 false) (> _lbv0 |0|)))))
(assert (or (> _lbv7 _lbv6) (= _lbv7 _lbv6)))
(assert (forall ((bv0 Bool)) (= (set173 bv0) (and (= bv0 true)))))
(assert (forall ((bv0 Bool)) (= (slist _lbv12 bv0) (set173 bv0))))
(assert (= (slen _lbv12) _lbv6))
(assert (or (> (shd _lbv12) x0) (= (shd _lbv12) x0) (= (shd _lbv12) 0)))
(assert (forall ((bv0 Bool)) (= (set174 bv0) (and (= bv0 true)))))
(assert (let ((a!1 (and (forall ((bv0 Bool)) (= (slist v bv0) (set174 bv0)))
                (= (slen v) (+ (slen _lbv12) 1))
                (= (shd v) _lbv7))))
  (=> (or (> (shd _lbv12) _lbv7) (= (shd _lbv12) _lbv7)) a!1)))
(assert (forall ((bv0 Bool)) (= (set175 bv0) (and (= bv0 true)))))
(assert (let ((a!1 (and (forall ((bv0 Bool)) (= (slist v bv0) (set175 bv0)))
                (= (slen v) s)
                (or (> (shd v) x0) (= (shd v) x0) (= (shd v) 0)))))
  (not a!1)))



(check-sat)
