;; 81
(declare-sort T358 0)
(declare-fun |0| () Int)
(declare-fun slen (T358) Int)
(declare-fun v () T358)
(declare-fun _lbv7 () T358)
(declare-fun _lbv1 () Int)
(declare-fun size1 () Int)
(declare-fun _lbv2 () Int)
(declare-fun size () Int)
(declare-fun var_v4 () Bool)
(declare-fun _lbv17 () T358)
(declare-fun _lbv16 () T358)
(declare-fun _lbv15 () T358)
(declare-fun _lbv14 () T358)
(declare-fun _lbv13 () T358)
(declare-fun _lbv12 () T358)
(declare-fun _lbv11 () T358)
(declare-fun _lbv10 () T358)
(declare-fun _lbv9 () T358)
(declare-fun _lbv8 () T358)
(declare-fun _lbv6 () Int)
(declare-fun s () Int)
(declare-fun _lbv5 () Int)
(declare-fun _lbv4 () Int)
(declare-fun n () Int)
(declare-fun _lbv3 () Int)
(declare-fun _lbv0 () Bool)
(declare-fun Nil () T358)
(assert (= |0| 0))
(assert (= |0| 0))
(assert (= |0| 0))
(assert (= |0| 0))
(assert (= |0| 0))
(assert (= |0| 0))
(assert (= |0| 0))
(assert (= |0| 0))
(assert (= |0| 0))
(assert (= |0| 0))
(assert (forall ((var_u283 Int)
         (var_u282 Int)
         (var_u281 Int)
         (var_u280 Int)
         (var_u279 Int)
         (var_u278 Int)
         (var_u277 Int)
         (var_u276 Int)
         (var_u275 Int)
         (var_u274 Int)
         (var_u273 Int)
         (var_u272 Int)
         (var_u271 Int)
         (var_u270 Int)
         (var_u269 Int))
  (let ((a!1 (= (= _lbv0 true)
                (and (= size |0|) (= (= _lbv0 false) (> size |0|)))))
        (a!2 (= (= var_v4 true)
                (and (= size |0|) (= (= var_v4 false) (> size |0|)))))
        (a!3 (=> (= (slen _lbv7) var_u270)
                 (and (or (> var_u270 |0|) (= var_u270 |0|)) (= var_u270 _lbv1))))
        (a!4 (=> (= var_u271 (+ (slen _lbv7) 1)) (= (slen _lbv8) var_u271)))
        (a!5 (=> (= var_u272 (+ (slen _lbv7) 1)) (= (slen _lbv9) var_u272)))
        (a!6 (=> (= var_u273 (+ (slen _lbv7) 1)) (= (slen _lbv10) var_u273)))
        (a!7 (=> (= var_u274 (+ (slen _lbv7) 1)) (= (slen _lbv11) var_u274)))
        (a!8 (=> (= var_u275 (+ (slen _lbv7) 1)) (= (slen _lbv12) var_u275)))
        (a!9 (=> (= var_u276 (+ (slen _lbv7) 1)) (= (slen _lbv13) var_u276)))
        (a!10 (=> (= var_u277 (+ (slen _lbv7) 1)) (= (slen _lbv14) var_u277)))
        (a!11 (=> (= var_u278 (+ (slen _lbv7) 1)) (= (slen _lbv15) var_u278)))
        (a!12 (=> (= var_u279 (+ (slen _lbv7) 1)) (= (slen _lbv16) var_u279)))
        (a!13 (=> (= var_u280 (+ (slen _lbv7) 1)) (= (slen _lbv17) var_u280)))
        (a!14 (=> (= var_u281 (+ (slen _lbv7) 1)) (= (slen v) var_u281)))
        (a!15 (=> (= (slen _lbv7) var_u282)
                  (and (or (> var_u282 |0|) (= var_u282 |0|))
                       (= var_u282 _lbv1))))
        (a!16 (=> (= var_u283 (+ (slen _lbv7) 1)) (= (slen v) var_u283))))
    (and (= (slen Nil) 0)
         a!1
         a!2
         (= _lbv1 (- size 1))
         (or (> _lbv2 size1) (= _lbv2 size1))
         (or (> _lbv3 n) (= _lbv3 n))
         (or (> _lbv4 _lbv1) (= _lbv4 _lbv1))
         (or (> _lbv5 s) (= _lbv5 s))
         (or (> _lbv6 size) (= _lbv6 size))
         (> size size1)
         a!3
         a!4
         a!5
         a!6
         a!7
         a!8
         a!9
         a!10
         a!11
         a!12
         a!13
         a!14
         (= var_v4 false)
         a!2
         (or (> _lbv2 size1) (= _lbv2 size1))
         a!15
         a!16))))
(assert (= |0| 0))
(assert (= |0| 0))
(assert (let ((a!1 (forall ((var_u284 Int))
             (=> (= (slen v) var_u284)
                 (and (or (> var_u284 |0|) (= var_u284 |0|)) (= var_u284 size))))))
  (not a!1)))

 (check-sat)
