;; 101
(declare-sort T433)
(declare-fun set858 (Bool) Bool)
(declare-fun var_u255 () Int)
(declare-fun set859 (Int) Bool)
(declare-fun set860 (Bool) Bool)
(declare-fun |0| () Int)
(declare-fun set861 (Bool) Bool)
(declare-fun set862 (Bool) Bool)
(declare-fun set863 (Bool) Bool)
(declare-fun set864 (Bool) Bool)
(declare-fun set865 (Bool) Bool)
(declare-fun set866 (Bool) Bool)
(declare-fun set867 (Bool) Bool)
(declare-fun set868 (Bool) Bool)
(declare-fun _lbv6 () Int)
(declare-fun smem (T433 Int Bool) Bool)
(declare-fun v () T433)
(declare-fun slist (T433 Bool) Bool)
(declare-fun _lbv0 () Int)
(declare-fun slen (T433) Int)
(declare-fun x0 () Int)
(declare-fun var_v219 () Bool)
(declare-fun _lbv7 () T433)
(declare-fun s () Int)
(declare-fun _lbv8 () T433)
(declare-fun var_v3 () Bool)
(declare-fun _lbv5 () Bool)
(declare-fun _lbv1 () Int)
(declare-fun _lbv4 () Bool)
(declare-fun _lbv3 () Bool)
(declare-fun _lbv2 () Bool)
(declare-fun nil () T433)
(declare-fun shd (T433 Int) Bool)
(declare-fun set869 (Bool) Bool)
(declare-fun set870 (Bool) Bool)
(assert (forall ((bv0 Bool)) (= (set858 bv0) (and (= bv0 false)))))
(assert (forall ((bv0 Int)) (= (set859 bv0) (and (= bv0 var_u255)))))
(assert (forall ((bv0 Bool)) (= (set860 bv0) (and (= bv0 true)))))
(assert (= |0| 0))
(assert (= |0| 0))
(assert (= |0| 0))
(assert (= |0| 0))
(assert (= |0| 0))
(assert (= |0| 0))
(assert (= |0| 0))
(assert (= |0| 0))
(assert (= |0| 0))
(assert (= |0| 0))
(assert (= |0| 0))
(assert (= |0| 0))
(assert (= |0| 0))
(assert (= |0| 0))
(assert (= |0| 0))
(assert (= |0| 0))
(assert (forall ((bv0 Bool)) (= (set861 bv0) (and (= bv0 true)))))
(assert (forall ((bv0 Bool)) (= (set862 bv0) (and (= bv0 true)))))
(assert (forall ((bv0 Bool)) (= (set863 bv0) (and (= bv0 true)))))
(assert (forall ((bv0 Bool)) (= (set864 bv0) (and (= bv0 true)))))
(assert (forall ((bv0 Bool)) (= (set865 bv0) (and (= bv0 true)))))
(assert (forall ((bv0 Bool)) (= (set866 bv0) (and (= bv0 true)))))
(assert (= |0| 0))
(assert (= |0| 0))
(assert (= |0| 0))
(assert (= |0| 0))
(assert (forall ((bv0 Bool)) (= (set867 bv0) (and (= bv0 true)))))
(assert (forall ((bv0 Bool)) (= (set868 bv0) (and (= bv0 true)))))
(assert (forall ((var_u259 Int)
         (var_u258 Int)
         (var_u257 Int)
         (var_u256 Int)
         (var_u255 Int))
  (let ((a!1 (not (forall ((bv0 Int)) (= (shd nil bv0) (set859 bv0)))))
        (a!2 (= (= _lbv2 true) (and (= x0 |0|) (= (= _lbv2 false) (> x0 |0|)))))
        (a!3 (= (= _lbv3 true) (and (= s |0|) (= (= _lbv3 false) (> s |0|)))))
        (a!4 (= (= _lbv4 true)
                (and (= _lbv1 |0|) (= (= _lbv4 false) (> _lbv1 |0|)))))
        (a!5 (= (= _lbv5 true)
                (and (= _lbv0 |0|) (= (= _lbv5 false) (> _lbv0 |0|)))))
        (a!6 (= (= var_v3 true) (and (= s |0|) (= (= var_v3 false) (> s |0|)))))
        (a!7 (= (= var_v219 true)
                (and (= x0 |0|) (= (= var_v219 false) (> x0 |0|)))))
        (a!8 (=> (forall ((bv0 Bool))
                   (= (smem _lbv8 var_u256 bv0) (set862 bv0)))
                 (not (> x0 var_u256))))
        (a!9 (=> (forall ((bv0 Bool))
                   (= (smem _lbv7 var_u257 bv0) (set864 bv0)))
                 (not (> x0 var_u257))))
        (a!10 (=> (forall ((bv0 Bool)) (= (smem v var_u258 bv0) (set866 bv0)))
                  (not (> _lbv6 var_u258))))
        (a!11 (=> (forall ((bv0 Bool)) (= (smem v var_u259 bv0) (set868 bv0)))
                  (not (> _lbv6 var_u259)))))
    (and (forall ((bv0 Bool)) (= (smem nil var_u255 bv0) (set858 bv0)))
         a!1
         (= (slen nil) 0)
         (forall ((bv0 Bool)) (= (slist nil bv0) (set860 bv0)))
         (or (> x0 |0|) (= x0 |0|))
         (= _lbv0 (- x0 1))
         (= _lbv1 (- s 1))
         a!2
         a!3
         a!4
         a!5
         a!6
         a!7
         (or (> _lbv6 |0|) (= _lbv6 |0|))
         (= (slen _lbv8) s)
         (forall ((bv0 Bool)) (= (slist _lbv8 bv0) (set861 bv0)))
         a!8
         (= (slen _lbv7) s)
         (forall ((bv0 Bool)) (= (slist _lbv7 bv0) (set863 bv0)))
         a!9
         (= (slen v) _lbv0)
         (forall ((bv0 Bool)) (= (slist v bv0) (set865 bv0)))
         a!10
         (= var_v219 false)
         a!7
         (= _lbv0 (- x0 1))
         (or (> _lbv6 |0|) (= _lbv6 |0|))
         (= (slen v) _lbv0)
         (forall ((bv0 Bool)) (= (slist v bv0) (set867 bv0)))
         a!11))))
(assert (forall ((bv0 Bool)) (= (set869 bv0) (and (= bv0 true)))))
(assert (forall ((bv0 Bool)) (= (set870 bv0) (and (= bv0 true)))))
(assert (let ((a!1 (forall ((var_u260 Int))
             (let ((a!1 (=> (forall ((bv0 Bool))
                              (= (smem v var_u260 bv0) (set870 bv0)))
                            (not (> x0 var_u260)))))
               (and (= (slen v) s)
                    (forall ((bv0 Bool)) (= (slist v bv0) (set869 bv0)))
                    a!1)))))
  (not a!1)))

 (check-sat)
