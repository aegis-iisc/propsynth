;; 173
(declare-sort T745 0)
(declare-fun set1070 (Bool) Bool)
(declare-fun var_u331 () Int)
(declare-fun set1071 (Int) Bool)
(declare-fun set1072 (Bool) Bool)
(declare-fun |0| () Int)
(declare-fun set1073 (Bool) Bool)
(declare-fun set1074 (Bool) Bool)
(declare-fun set1075 (Bool) Bool)
(declare-fun set1076 (Bool) Bool)
(declare-fun set1077 (Bool) Bool)
(declare-fun set1078 (Bool) Bool)
(declare-fun _lbv0 () Int)
(declare-fun smem (T745 Int Bool) Bool)
(declare-fun v () T745)
(declare-fun slist (T745 Bool) Bool)
(declare-fun slen (T745) Int)
(declare-fun x0 () Int)
(declare-fun var_v254 () Bool)
(declare-fun _lbv8 () T745)
(declare-fun s0 () Int)
(declare-fun _lbv6 () Int)
(declare-fun s01 () Int)
(declare-fun var_v3 () Bool)
(declare-fun _lbv5 () Bool)
(declare-fun _lbv1 () Int)
(declare-fun _lbv4 () Bool)
(declare-fun _lbv3 () Bool)
(declare-fun _lbv2 () Bool)
(declare-fun Nil () T745)
(declare-fun shd (T745 Int) Bool)
(declare-fun set1079 (Bool) Bool)
(declare-fun set1080 (Bool) Bool)
(assert (forall ((bv0 Bool)) (= (set1070 bv0) (and (= bv0 false)))))
(assert (forall ((bv0 Int)) (= (set1071 bv0) (and (= bv0 var_u331)))))
(assert (forall ((bv0 Bool)) (= (set1072 bv0) (and (= bv0 true)))))
(assert (= |0| 0))
(assert (= |0| 0))
(assert (= |0| 0))
(assert (= |0| 0))
(assert (= |0| 0))
(assert (= |0| 0))
(assert (= |0| 0))
(assert (= |0| 0))
(assert (= |0| 0))
(assert (= |0| 0))
(assert (= |0| 0))
(assert (= |0| 0))
(assert (= |0| 0))
(assert (= |0| 0))
(assert (= |0| 0))
(assert (= |0| 0))
(assert (forall ((bv0 Bool)) (= (set1073 bv0) (and (= bv0 true)))))
(assert (forall ((bv0 Bool)) (= (set1074 bv0) (and (= bv0 true)))))
(assert (forall ((bv0 Bool)) (= (set1075 bv0) (and (= bv0 true)))))
(assert (forall ((bv0 Bool)) (= (set1076 bv0) (and (= bv0 true)))))
(assert (= |0| 0))
(assert (= |0| 0))
(assert (forall ((bv0 Bool)) (= (set1077 bv0) (and (= bv0 true)))))
(assert (forall ((bv0 Bool)) (= (set1078 bv0) (and (= bv0 true)))))
(assert (forall ((var_u334 Int) (var_u333 Int) (var_u332 Int) (var_u331 Int))
  (let ((a!1 (not (forall ((bv0 Int)) (= (shd Nil bv0) (set1071 bv0)))))
        (a!2 (= (= _lbv2 true) (and (= x0 |0|) (= (= _lbv2 false) (> x0 |0|)))))
        (a!3 (= (= _lbv3 true) (and (= s0 |0|) (= (= _lbv3 false) (> s0 |0|)))))
        (a!4 (= (= _lbv4 true)
                (and (= _lbv1 |0|) (= (= _lbv4 false) (> _lbv1 |0|)))))
        (a!5 (= (= _lbv5 true)
                (and (= _lbv0 |0|) (= (= _lbv5 false) (> _lbv0 |0|)))))
        (a!6 (= (= var_v3 true)
                (and (= s0 |0|) (= (= var_v3 false) (> s0 |0|)))))
        (a!7 (= (= var_v254 true)
                (and (= x0 |0|) (= (= var_v254 false) (> x0 |0|)))))
        (a!8 (=> (forall ((bv0 Bool))
                   (= (smem _lbv8 var_u332 bv0) (set1074 bv0)))
                 (not (> x0 var_u332))))
        (a!9 (=> (forall ((bv0 Bool)) (= (smem v var_u333 bv0) (set1076 bv0)))
                 (not (> _lbv0 var_u333))))
        (a!10 (=> (forall ((bv0 Bool)) (= (smem v var_u334 bv0) (set1078 bv0)))
                  (not (> _lbv0 var_u334)))))
    (and (forall ((bv0 Bool)) (= (smem Nil var_u331 bv0) (set1070 bv0)))
         a!1
         (= (slen Nil) 0)
         (forall ((bv0 Bool)) (= (slist Nil bv0) (set1072 bv0)))
         (= _lbv0 (- x0 1))
         (= _lbv1 (- s0 1))
         a!2
         a!3
         a!4
         a!5
         a!6
         a!7
         (> s0 s01)
         (or (> _lbv6 |0|) (= _lbv6 |0|))
         (or (> x0 |0|) (= x0 |0|))
         (= (slen _lbv8) s0)
         (forall ((bv0 Bool)) (= (slist _lbv8 bv0) (set1073 bv0)))
         a!8
         (= (slen v) _lbv0)
         (forall ((bv0 Bool)) (= (slist v bv0) (set1075 bv0)))
         a!9
         (= var_v254 false)
         a!7
         (= _lbv0 (- x0 1))
         (= _lbv0 (- x0 1))
         (= (slen v) _lbv0)
         (forall ((bv0 Bool)) (= (slist v bv0) (set1077 bv0)))
         a!10))))
(assert (forall ((bv0 Bool)) (= (set1079 bv0) (and (= bv0 true)))))
(assert (forall ((bv0 Bool)) (= (set1080 bv0) (and (= bv0 true)))))
(assert (let ((a!1 (forall ((var_u335 Int))
             (let ((a!1 (=> (forall ((bv0 Bool))
                              (= (smem v var_u335 bv0) (set1080 bv0)))
                            (not (> x0 var_u335)))))
               (and (= (slen v) s0)
                    (forall ((bv0 Bool)) (= (slist v bv0) (set1079 bv0)))
                    a!1)))))
  (not a!1)))

 (check-sat)
