;; 431
(declare-sort T1860 0)
(declare-fun set3358 (Bool) Bool)
(declare-fun var_u1185 () Int)
(declare-fun set3359 (Int) Bool)
(declare-fun set3360 (Bool) Bool)
(declare-fun |0| () Int)
(declare-fun set3361 (Bool) Bool)
(declare-fun set3362 (Bool) Bool)
(declare-fun set3363 (Bool) Bool)
(declare-fun set3364 (Bool) Bool)
(declare-fun set3365 (Bool) Bool)
(declare-fun set3366 (Bool) Bool)
(declare-fun set3367 (Bool) Bool)
(declare-fun set3368 (Bool) Bool)
(declare-fun set3369 (Bool) Bool)
(declare-fun set3370 (Bool) Bool)
(declare-fun set3371 (Bool) Bool)
(declare-fun set3372 (Bool) Bool)
(declare-fun set3373 (Bool) Bool)
(declare-fun set3374 (Bool) Bool)
(declare-fun set3375 (Bool) Bool)
(declare-fun set3376 (Bool) Bool)
(declare-fun set3377 (Bool) Bool)
(declare-fun set3378 (Bool) Bool)
(declare-fun set3379 (Bool) Bool)
(declare-fun set3380 (Bool) Bool)
(declare-fun set3381 (Bool) Bool)
(declare-fun set3382 (Bool) Bool)
(declare-fun set3383 (Bool) Bool)
(declare-fun var_u1196 () Int)
(declare-fun set3384 (Int) Bool)
(declare-fun set3385 (Bool) Bool)
(declare-fun set3386 (Int) Bool)
(declare-fun set3387 (Bool) Bool)
(declare-fun set3388 (Bool) Bool)
(declare-fun set3389 (Bool) Bool)
(declare-fun var_u1197 () Int)
(declare-fun set3390 (Int) Bool)
(declare-fun set3391 (Bool) Bool)
(declare-fun set3392 (Int) Bool)
(declare-fun set3393 (Bool) Bool)
(declare-fun slist (T1860 Bool) Bool)
(declare-fun v () T1860)
(declare-fun slen (T1860) Int)
(declare-fun _lbv4 () T1860)
(declare-fun smem (T1860 Int Bool) Bool)
(declare-fun shd (T1860 Int) Bool)
(declare-fun _lbv23 () Int)
(declare-fun size () Int)
(declare-fun x0 () Int)
(declare-fun var_v364 () Bool)
(declare-fun _lbv19 () T1860)
(declare-fun _lbv15 () T1860)
(declare-fun _lbv26 () T1860)
(declare-fun _lbv36 () T1860)
(declare-fun _lbv30 () T1860)
(declare-fun _lbv33 () T1860)
(declare-fun xs () T1860)
(declare-fun size1 () Int)
(declare-fun x () Int)
(declare-fun _lbv24 () T1860)
(declare-fun _lbv25 () T1860)
(declare-fun _lbv7 () T1860)
(declare-fun _lbv6 () T1860)
(declare-fun _lbv3 () Int)
(declare-fun _lbv2 () Int)
(declare-fun var_v3 () Bool)
(declare-fun _lbv1 () Bool)
(declare-fun _lbv0 () Bool)
(declare-fun Nil () T1860)
(declare-fun set3394 (Bool) Bool)
(declare-fun set3395 (Bool) Bool)
(assert (forall ((bv0 Bool)) (= (set3358 bv0) (and (= bv0 false)))))
(assert (forall ((bv0 Int)) (= (set3359 bv0) (and (= bv0 var_u1185)))))
(assert (forall ((bv0 Bool)) (= (set3360 bv0) (and (= bv0 true)))))
(assert (= |0| 0))
(assert (= |0| 0))
(assert (= |0| 0))
(assert (= |0| 0))
(assert (= |0| 0))
(assert (= |0| 0))
(assert (= |0| 0))
(assert (= |0| 0))
(assert (forall ((bv0 Bool)) (= (set3361 bv0) (and (= bv0 true)))))
(assert (forall ((bv0 Bool)) (= (set3362 bv0) (and (= bv0 true)))))
(assert (forall ((bv0 Bool)) (= (set3363 bv0) (and (= bv0 true)))))
(assert (forall ((bv0 Bool)) (= (set3364 bv0) (and (= bv0 true)))))
(assert (forall ((bv0 Bool)) (= (set3365 bv0) (and (= bv0 true)))))
(assert (forall ((bv0 Bool)) (= (set3366 bv0) (and (= bv0 true)))))
(assert (forall ((bv0 Bool)) (= (set3367 bv0) (and (= bv0 true)))))
(assert (forall ((bv0 Bool)) (= (set3368 bv0) (and (= bv0 true)))))
(assert (= |0| 0))
(assert (= |0| 0))
(assert (= |0| 0))
(assert (= |0| 0))
(assert (forall ((bv0 Bool)) (= (set3369 bv0) (and (= bv0 true)))))
(assert (forall ((bv0 Bool)) (= (set3370 bv0) (and (= bv0 true)))))
(assert (forall ((bv0 Bool)) (= (set3371 bv0) (and (= bv0 true)))))
(assert (forall ((bv0 Bool)) (= (set3372 bv0) (and (= bv0 true)))))
(assert (forall ((bv0 Bool)) (= (set3373 bv0) (and (= bv0 true)))))
(assert (forall ((bv0 Bool)) (= (set3374 bv0) (and (= bv0 true)))))
(assert (forall ((bv0 Bool)) (= (set3375 bv0) (and (= bv0 true)))))
(assert (forall ((bv0 Bool)) (= (set3376 bv0) (and (= bv0 true)))))
(assert (forall ((bv0 Bool)) (= (set3377 bv0) (and (= bv0 true)))))
(assert (forall ((bv0 Bool)) (= (set3378 bv0) (and (= bv0 true)))))
(assert (forall ((bv0 Bool)) (= (set3379 bv0) (and (= bv0 true)))))
(assert (forall ((bv0 Bool)) (= (set3380 bv0) (and (= bv0 true)))))
(assert (forall ((bv0 Bool)) (= (set3381 bv0) (and (= bv0 true)))))
(assert (forall ((bv0 Bool)) (= (set3382 bv0) (and (= bv0 true)))))
(assert (forall ((bv0 Bool)) (= (set3383 bv0) (and (= bv0 true)))))
(assert (forall ((bv0 Int)) (= (set3384 bv0) (and (= bv0 var_u1196)))))
(assert (forall ((bv0 Bool)) (= (set3385 bv0) (and (= bv0 true)))))
(assert (forall ((bv0 Int)) (= (set3386 bv0) (and (= bv0 var_u1196)))))
(assert (forall ((bv0 Bool)) (= (set3387 bv0) (and (= bv0 true)))))
(assert (= |0| 0))
(assert (= |0| 0))
(assert (forall ((bv0 Bool)) (= (set3388 bv0) (and (= bv0 true)))))
(assert (forall ((bv0 Bool)) (= (set3389 bv0) (and (= bv0 true)))))
(assert (forall ((bv0 Int)) (= (set3390 bv0) (and (= bv0 var_u1197)))))
(assert (forall ((bv0 Bool)) (= (set3391 bv0) (and (= bv0 true)))))
(assert (forall ((bv0 Int)) (= (set3392 bv0) (and (= bv0 var_u1197)))))
(assert (forall ((bv0 Bool)) (= (set3393 bv0) (and (= bv0 true)))))
(assert (forall ((var_u1197 Int)
         (var_u1196 Int)
         (var_u1195 Int)
         (var_u1194 Int)
         (var_u1193 Int)
         (var_u1192 Int)
         (var_u1191 Int)
         (var_u1190 Int)
         (var_u1189 Int)
         (var_u1188 Int)
         (var_u1187 Int)
         (var_u1186 Int)
         (var_u1185 Int))
  (let ((a!1 (not (forall ((bv0 Int)) (= (shd Nil bv0) (set3359 bv0)))))
        (a!2 (= (= _lbv0 true) (and (= x0 |0|) (= (= _lbv0 false) (> x0 |0|)))))
        (a!3 (= (= _lbv1 true)
                (and (= size |0|) (= (= _lbv1 false) (> size |0|)))))
        (a!4 (= (= var_v3 true)
                (and (= size |0|) (= (= var_v3 false) (> size |0|)))))
        (a!5 (= (= var_v364 true)
                (and (= x0 |0|) (= (= var_v364 false) (> x0 |0|)))))
        (a!6 (=> (forall ((bv0 Bool))
                   (= (smem _lbv6 var_u1186 bv0) (set3362 bv0)))
                 (not (> x0 var_u1186))))
        (a!7 (=> (forall ((bv0 Bool))
                   (= (smem _lbv7 var_u1187 bv0) (set3364 bv0)))
                 (not (> x0 var_u1187))))
        (a!8 (=> (forall ((bv0 Bool))
                   (= (smem _lbv25 var_u1188 bv0) (set3366 bv0)))
                 (not (> x0 var_u1188))))
        (a!9 (=> (forall ((bv0 Bool))
                   (= (smem _lbv24 var_u1189 bv0) (set3368 bv0)))
                 (not (> x0 var_u1189))))
        (a!10 (=> (forall ((bv0 Bool))
                    (= (smem _lbv33 var_u1190 bv0) (set3372 bv0)))
                  (not (> x0 var_u1190))))
        (a!11 (=> (forall ((bv0 Bool))
                    (= (smem _lbv30 var_u1191 bv0) (set3374 bv0)))
                  (not (> x0 var_u1191))))
        (a!12 (=> (forall ((bv0 Bool))
                    (= (smem _lbv36 var_u1192 bv0) (set3376 bv0)))
                  (not (> x0 var_u1192))))
        (a!13 (=> (forall ((bv0 Bool))
                    (= (smem _lbv26 var_u1193 bv0) (set3378 bv0)))
                  (not (> x0 var_u1193))))
        (a!14 (=> (forall ((bv0 Bool))
                    (= (smem _lbv15 var_u1194 bv0) (set3380 bv0)))
                  (not (> x0 var_u1194))))
        (a!15 (=> (forall ((bv0 Bool))
                    (= (smem _lbv19 var_u1195 bv0) (set3382 bv0)))
                  (not (> x0 var_u1195))))
        (a!16 (=> (forall ((bv0 Bool)) (= (smem v var_u1196 bv0) (set3383 bv0)))
                  (not (> _lbv23 var_u1196))))
        (a!17 (= (forall ((bv0 Int)) (= (shd v bv0) (set3384 bv0)))
                 (= var_u1196 _lbv23)))
        (a!18 (=> (forall ((bv0 Int)) (= (shd v bv0) (set3386 bv0)))
                  (forall ((bv0 Bool)) (= (smem v var_u1196 bv0) (set3385 bv0)))))
        (a!19 (=> (forall ((bv0 Bool)) (= (smem v var_u1197 bv0) (set3389 bv0)))
                  (not (> _lbv23 var_u1197))))
        (a!20 (= (forall ((bv0 Int)) (= (shd v bv0) (set3390 bv0)))
                 (= var_u1197 _lbv23)))
        (a!21 (=> (forall ((bv0 Int)) (= (shd v bv0) (set3392 bv0)))
                  (forall ((bv0 Bool)) (= (smem v var_u1197 bv0) (set3391 bv0))))))
    (and (forall ((bv0 Bool)) (= (smem Nil var_u1185 bv0) (set3358 bv0)))
         a!1
         (= (slen Nil) 0)
         (forall ((bv0 Bool)) (= (slist Nil bv0) (set3360 bv0)))
         a!2
         a!3
         a!4
         a!5
         (> size _lbv2)
         (> size _lbv3)
         (> size _lbv23)
         (= (slen _lbv6) size)
         (forall ((bv0 Bool)) (= (slist _lbv6 bv0) (set3361 bv0)))
         a!6
         (= (slen _lbv7) size)
         (forall ((bv0 Bool)) (= (slist _lbv7 bv0) (set3363 bv0)))
         a!7
         (= (slen _lbv25) size)
         (forall ((bv0 Bool)) (= (slist _lbv25 bv0) (set3365 bv0)))
         a!8
         (= (slen _lbv24) size)
         (forall ((bv0 Bool)) (= (slist _lbv24 bv0) (set3367 bv0)))
         a!9
         (or (> x |0|) (= x |0|))
         (> size size1)
         (or (> x0 |0|) (= x0 |0|))
         (forall ((bv0 Bool)) (= (slist _lbv4 bv0) (set3369 bv0)))
         (forall ((bv0 Bool)) (= (slist xs bv0) (set3370 bv0)))
         (= (slen _lbv33) size)
         (forall ((bv0 Bool)) (= (slist _lbv33 bv0) (set3371 bv0)))
         a!10
         (= (slen _lbv30) size)
         (forall ((bv0 Bool)) (= (slist _lbv30 bv0) (set3373 bv0)))
         a!11
         (= (slen _lbv36) size)
         (forall ((bv0 Bool)) (= (slist _lbv36 bv0) (set3375 bv0)))
         a!12
         (= (slen _lbv26) size)
         (forall ((bv0 Bool)) (= (slist _lbv26 bv0) (set3377 bv0)))
         a!13
         (= (slen _lbv15) size)
         (forall ((bv0 Bool)) (= (slist _lbv15 bv0) (set3379 bv0)))
         a!14
         (= (slen _lbv19) size)
         (forall ((bv0 Bool)) (= (slist _lbv19 bv0) (set3381 bv0)))
         a!15
         a!16
         a!17
         a!18
         (= (slen v) (+ (slen _lbv4) 1))
         (forall ((bv0 Bool)) (= (slist v bv0) (set3387 bv0)))
         (= var_v364 false)
         a!5
         (> size _lbv23)
         (forall ((bv0 Bool)) (= (slist _lbv4 bv0) (set3388 bv0)))
         a!19
         a!20
         a!21
         (= (slen v) (+ (slen _lbv4) 1))
         (forall ((bv0 Bool)) (= (slist v bv0) (set3393 bv0)))))))
(assert (forall ((bv0 Bool)) (= (set3394 bv0) (and (= bv0 true)))))
(assert (forall ((bv0 Bool)) (= (set3395 bv0) (and (= bv0 true)))))
(assert (let ((a!1 (forall ((var_u1198 Int))
             (let ((a!1 (=> (forall ((bv0 Bool))
                              (= (smem v var_u1198 bv0) (set3395 bv0)))
                            (not (> x0 var_u1198)))))
               (and (= (slen v) size)
                    (forall ((bv0 Bool)) (= (slist v bv0) (set3394 bv0)))
                    a!1)))))
  (not a!1)))

 (check-sat)
