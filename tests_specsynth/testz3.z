 (declare-sort T434)
(declare-fun set464 (Bool) Bool)
(declare-fun var_u200 () Int)
(declare-fun set465 (Int) Bool)
(declare-fun |0| () Int)
(declare-fun set466 (Bool) Bool)
(declare-fun set467 (Bool) Bool)
(declare-fun set468 (Bool) Bool)
(declare-fun set469 (Bool) Bool)
(declare-fun set470 (Bool) Bool)
(declare-fun set471 (Bool) Bool)
(declare-fun set472 (Bool) Bool)
(declare-fun set473 (Bool) Bool)
(declare-fun set474 (Bool) Bool)
(declare-fun set475 (Bool) Bool)
(declare-fun var_u205 () Int)
(declare-fun set476 (Int) Bool)
(declare-fun set477 (Bool) Bool)
(declare-fun set478 (Int) Bool)
(declare-fun set479 (Bool) Bool)
(declare-fun set480 (Bool) Bool)
(declare-fun set481 (Bool) Bool)
(declare-fun set482 (Bool) Bool)
(declare-fun var_u207 () Int)
(declare-fun set483 (Int) Bool)
(declare-fun set484 (Bool) Bool)
(declare-fun set485 (Int) Bool)
(declare-fun slen (T434) Int)
(declare-fun _lbv8 () T434)
(declare-fun v () T434)
(declare-fun smem (T434 Int Bool) Bool)
(declare-fun shd (T434 Int) Bool)
(declare-fun x0 () Int)
(declare-fun ulist (T434 Bool) Bool)
(declare-fun _lbv1 () Int)
(declare-fun var_v42 () Bool)
(declare-fun s () Int)
(declare-fun _lbv9 () T434)
(declare-fun _lbv0 () Int)
(declare-fun _lbv7 () T434)
(declare-fun _lbv6 () T434)
(declare-fun var_v4 () Bool)
(declare-fun _lbv5 () Bool)
(declare-fun _lbv4 () Bool)
(declare-fun _lbv3 () Bool)
(declare-fun _lbv2 () Bool)
(declare-fun nil () T434)
(declare-fun set486 (Bool) Bool)
(assert (forall ((bv0 Bool)) (= (set464 bv0) (and (= bv0 false)))))
(assert (forall ((bv0 Int)) (= (set465 bv0) (and (= bv0 var_u200)))))
(assert (= |0| 0))
(assert (= |0| 0))
(assert (= |0| 0))
(assert (= |0| 0))
(assert (= |0| 0))
(assert (= |0| 0))
(assert (= |0| 0))
(assert (= |0| 0))
(assert (= |0| 0))
(assert (= |0| 0))
(assert (= |0| 0))
(assert (= |0| 0))
(assert (= |0| 0))
(assert (= |0| 0))
(assert (forall ((bv0 Bool)) (= (set466 bv0) (and (= bv0 true)))))
(assert (forall ((bv0 Bool)) (= (set467 bv0) (and (= bv0 true)))))
(assert (forall ((bv0 Bool)) (= (set468 bv0) (and (= bv0 true)))))
(assert (forall ((bv0 Bool)) (= (set469 bv0) (and (= bv0 true)))))
(assert (forall ((bv0 Bool)) (= (set470 bv0) (and (= bv0 true)))))
(assert (forall ((bv0 Bool)) (= (set471 bv0) (and (= bv0 true)))))
(assert (forall ((bv0 Bool)) (= (set472 bv0) (and (= bv0 true)))))
(assert (forall ((bv0 Bool)) (= (set473 bv0) (and (= bv0 true)))))
(assert (forall ((bv0 Bool)) (= (set474 bv0) (and (= bv0 true)))))
(assert (forall ((bv0 Bool)) (= (set475 bv0) (and (= bv0 true)))))
(assert (forall ((bv0 Int)) (= (set476 bv0) (and (= bv0 var_u205)))))
(assert (forall ((bv0 Bool)) (= (set477 bv0) (and (= bv0 true)))))
(assert (forall ((bv0 Int)) (= (set478 bv0) (and (= bv0 var_u205)))))
(assert (= |0| 0))
(assert (= |0| 0))
(assert (forall ((bv0 Bool)) (= (set479 bv0) (and (= bv0 true)))))
(assert (forall ((bv0 Bool)) (= (set480 bv0) (and (= bv0 true)))))
(assert (forall ((bv0 Bool)) (= (set481 bv0) (and (= bv0 true)))))
(assert (forall ((bv0 Bool)) (= (set482 bv0) (and (= bv0 true)))))
(assert (forall ((bv0 Int)) (= (set483 bv0) (and (= bv0 var_u207)))))
(assert (forall ((bv0 Bool)) (= (set484 bv0) (and (= bv0 true)))))
(assert (forall ((bv0 Int)) (= (set485 bv0) (and (= bv0 var_u207)))))
(assert (forall ((var_u207 Int)
         (var_u206 Int)
         (var_u205 Int)
         (var_u204 Int)
         (var_u203 Int)
         (var_u202 Int)
         (var_u201 Int)
         (var_u200 Int))
  (let ((a!1 (not (forall ((bv0 Int)) (= (shd nil bv0) (set465 bv0)))))
        (a!2 (= (= _lbv2 true) (and (= x0 |0|) (= (= _lbv2 false) (> x0 |0|)))))
        (a!3 (= (= _lbv3 true) (and (= s |0|) (= (= _lbv3 false) (> s |0|)))))
        (a!4 (= (= _lbv4 true)
                (and (= _lbv1 |0|) (= (= _lbv4 false) (> _lbv1 |0|)))))
        (a!5 (= (= _lbv5 true)
                (and (= _lbv0 |0|) (= (= _lbv5 false) (> _lbv0 |0|)))))
        (a!6 (= (= var_v4 true)
                (and (= _lbv0 |0|) (= (= var_v4 false) (> _lbv0 |0|)))))
        (a!7 (= (= var_v42 true)
                (and (= _lbv1 |0|) (= (= var_v42 false) (> _lbv1 |0|)))))
        (a!8 (=> (forall ((bv0 Bool))
                   (= (smem _lbv6 var_u201 bv0) (set467 bv0)))
                 (= var_u201 _lbv1)))
        (a!9 (=> (forall ((bv0 Bool))
                   (= (smem _lbv7 var_u202 bv0) (set469 bv0)))
                 (= var_u202 _lbv0)))
        (a!10 (=> (forall ((bv0 Bool))
                    (= (smem _lbv8 var_u203 bv0) (set471 bv0)))
                  (= var_u203 x0)))
        (a!11 (=> (forall ((bv0 Bool))
                    (= (smem _lbv9 var_u204 bv0) (set473 bv0)))
                  (= var_u204 s)))
        (a!12 (or (forall ((bv0 Bool))
                    (= (smem _lbv8 var_u205 bv0) (set474 bv0)))
                  (= var_u205 x0)))
        (a!14 (= (forall ((bv0 Int)) (= (shd v bv0) (set476 bv0)))
                 (= var_u205 x0)))
        (a!15 (=> (forall ((bv0 Int)) (= (shd v bv0) (set478 bv0)))
                  (forall ((bv0 Bool)) (= (smem v var_u205 bv0) (set477 bv0)))))
        (a!16 (=> (forall ((bv0 Bool))
                    (= (smem _lbv8 var_u206 bv0) (set480 bv0)))
                  (= var_u206 x0)))
        (a!17 (or (forall ((bv0 Bool))
                    (= (smem _lbv8 var_u207 bv0) (set481 bv0)))
                  (= var_u207 x0)))
        (a!19 (= (forall ((bv0 Int)) (= (shd v bv0) (set483 bv0)))
                 (= var_u207 x0)))
        (a!20 (=> (forall ((bv0 Int)) (= (shd v bv0) (set485 bv0)))
                  (forall ((bv0 Bool)) (= (smem v var_u207 bv0) (set484 bv0))))))
  (let ((a!13 (= (forall ((bv0 Bool)) (= (smem v var_u205 bv0) (set475 bv0)))
                 a!12))
        (a!18 (= (forall ((bv0 Bool)) (= (smem v var_u207 bv0) (set482 bv0)))
                 a!17)))
    (and (forall ((bv0 Bool)) (= (smem nil var_u200 bv0) (set464 bv0)))
         a!1
         (= (slen nil) 0)
         (or (> s |0|) (= s |0|))
         (= _lbv0 (- x0 1))
         (= _lbv1 (- s 1))
         a!2
         a!3
         a!4
         a!5
         a!6
         a!7
         (= (slen _lbv6) _lbv1)
         (forall ((bv0 Bool)) (= (ulist _lbv6 bv0) (set466 bv0)))
         a!8
         (= (slen _lbv7) _lbv1)
         (forall ((bv0 Bool)) (= (ulist _lbv7 bv0) (set468 bv0)))
         a!9
         (= (slen _lbv8) _lbv1)
         (forall ((bv0 Bool)) (= (ulist _lbv8 bv0) (set470 bv0)))
         a!10
         (= (slen _lbv9) _lbv1)
         (forall ((bv0 Bool)) (= (ulist _lbv9 bv0) (set472 bv0)))
         a!11
         a!13( (declare-sort T434)
(declare-fun set464 (Bool) Bool)
(declare-fun var_u200 () Int)
(declare-fun set465 (Int) Bool)
(declare-fun |0| () Int)
(declare-fun set466 (Bool) Bool)
(declare-fun set467 (Bool) Bool)
(declare-fun set468 (Bool) Bool)
(declare-fun set469 (Bool) Bool)
(declare-fun set470 (Bool) Bool)
(declare-fun set471 (Bool) Bool)
(declare-fun set472 (Bool) Bool)
(declare-fun set473 (Bool) Bool)
(declare-fun set474 (Bool) Bool)
(declare-fun set475 (Bool) Bool)
(declare-fun var_u205 () Int)
(declare-fun set476 (Int) Bool)
(declare-fun set477 (Bool) Bool)
(declare-fun set478 (Int) Bool)
(declare-fun set479 (Bool) Bool)
(declare-fun set480 (Bool) Bool)
(declare-fun set481 (Bool) Bool)
(declare-fun set482 (Bool) Bool)
(declare-fun var_u207 () Int)
(declare-fun set483 (Int) Bool)
(declare-fun set484 (Bool) Bool)
(declare-fun set485 (Int) Bool)
(declare-fun slen (T434) Int)
(declare-fun _lbv8 () T434)
(declare-fun v () T434)
(declare-fun smem (T434 Int Bool) Bool)
(declare-fun shd (T434 Int) Bool)
(declare-fun x0 () Int)
(declare-fun ulist (T434 Bool) Bool)
(declare-fun _lbv1 () Int)
(declare-fun var_v42 () Bool)
(declare-fun s () Int)
(declare-fun _lbv9 () T434)
(declare-fun _lbv0 () Int)
(declare-fun _lbv7 () T434)
(declare-fun _lbv6 () T434)
(declare-fun var_v4 () Bool)
(declare-fun _lbv5 () Bool)
(declare-fun _lbv4 () Bool)
(declare-fun _lbv3 () Bool)
(declare-fun _lbv2 () Bool)
(declare-fun nil () T434)
(declare-fun set486 (Bool) Bool)
(assert (forall ((bv0 Bool)) (= (set464 bv0) (and (= bv0 false)))))
(assert (forall ((bv0 Int)) (= (set465 bv0) (and (= bv0 var_u200)))))
(assert (= |0| 0))
(assert (= |0| 0))
(assert (= |0| 0))
(assert (= |0| 0))
(assert (= |0| 0))
(assert (= |0| 0))
(assert (= |0| 0))
(assert (= |0| 0))
(assert (= |0| 0))
(assert (= |0| 0))
(assert (= |0| 0))
(assert (= |0| 0))
(assert (= |0| 0))
(assert (= |0| 0))
(assert (forall ((bv0 Bool)) (= (set466 bv0) (and (= bv0 true)))))
(assert (forall ((bv0 Bool)) (= (set467 bv0) (and (= bv0 true)))))
(assert (forall ((bv0 Bool)) (= (set468 bv0) (and (= bv0 true)))))
(assert (forall ((bv0 Bool)) (= (set469 bv0) (and (= bv0 true)))))
(assert (forall ((bv0 Bool)) (= (set470 bv0) (and (= bv0 true)))))
(assert (forall ((bv0 Bool)) (= (set471 bv0) (and (= bv0 true)))))
(assert (forall ((bv0 Bool)) (= (set472 bv0) (and (= bv0 true)))))
(assert (forall ((bv0 Bool)) (= (set473 bv0) (and (= bv0 true)))))
(assert (forall ((bv0 Bool)) (= (set474 bv0) (and (= bv0 true)))))
(assert (forall ((bv0 Bool)) (= (set475 bv0) (and (= bv0 true)))))
(assert (forall ((bv0 Int)) (= (set476 bv0) (and (= bv0 var_u205)))))
(assert (forall ((bv0 Bool)) (= (set477 bv0) (and (= bv0 true)))))
(assert (forall ((bv0 Int)) (= (set478 bv0) (and (= bv0 var_u205)))))
(assert (= |0| 0))
(assert (= |0| 0))
(assert (forall ((bv0 Bool)) (= (set479 bv0) (and (= bv0 true)))))
(assert (forall ((bv0 Bool)) (= (set480 bv0) (and (= bv0 true)))))
(assert (forall ((bv0 Bool)) (= (set481 bv0) (and (= bv0 true)))))
(assert (forall ((bv0 Bool)) (= (set482 bv0) (and (= bv0 true)))))
(assert (forall ((bv0 Int)) (= (set483 bv0) (and (= bv0 var_u207)))))
(assert (forall ((bv0 Bool)) (= (set484 bv0) (and (= bv0 true)))))
(assert (forall ((bv0 Int)) (= (set485 bv0) (and (= bv0 var_u207)))))
(assert (forall ((var_u207 Int)
         (var_u206 Int)
         (var_u205 Int)
         (var_u204 Int)
         (var_u203 Int)
         (var_u202 Int)
         (var_u201 Int)
         (var_u200 Int))
  (let ((a!1 (not (forall ((bv0 Int)) (= (shd nil bv0) (set465 bv0)))))
        (a!2 (= (= _lbv2 true) (and (= x0 |0|) (= (= _lbv2 false) (> x0 |0|)))))
        (a!3 (= (= _lbv3 true) (and (= s |0|) (= (= _lbv3 false) (> s |0|)))))
        (a!4 (= (= _lbv4 true)
                (and (= _lbv1 |0|) (= (= _lbv4 false) (> _lbv1 |0|)))))
        (a!5 (= (= _lbv5 true)
                (and (= _lbv0 |0|) (= (= _lbv5 false) (> _lbv0 |0|)))))
        (a!6 (= (= var_v4 true)
                (and (= _lbv0 |0|) (= (= var_v4 false) (> _lbv0 |0|)))))
        (a!7 (= (= var_v42 true)
                (and (= _lbv1 |0|) (= (= var_v42 false) (> _lbv1 |0|)))))
        (a!8 (=> (forall ((bv0 Bool))
                   (= (smem _lbv6 var_u201 bv0) (set467 bv0)))
                 (= var_u201 _lbv1)))
        (a!9 (=> (forall ((bv0 Bool))
                   (= (smem _lbv7 var_u202 bv0) (set469 bv0)))
                 (= var_u202 _lbv0)))
        (a!10 (=> (forall ((bv0 Bool))
                    (= (smem _lbv8 var_u203 bv0) (set471 bv0)))
                  (= var_u203 x0)))
        (a!11 (=> (forall ((bv0 Bool))
                    (= (smem _lbv9 var_u204 bv0) (set473 bv0)))
                  (= var_u204 s)))
        (a!12 (or (forall ((bv0 Bool))
                    (= (smem _lbv8 var_u205 bv0) (set474 bv0)))
                  (= var_u205 x0)))
        (a!14 (= (forall ((bv0 Int)) (= (shd v bv0) (set476 bv0)))
                 (= var_u205 x0)))
        (a!15 (=> (forall ((bv0 Int)) (= (shd v bv0) (set478 bv0)))
                  (forall ((bv0 Bool)) (= (smem v var_u205 bv0) (set477 bv0)))))
        (a!16 (=> (forall ((bv0 Bool))
                    (= (smem _lbv8 var_u206 bv0) (set480 bv0)))
                  (= var_u206 x0)))
        (a!17 (or (forall ((bv0 Bool))
                    (= (smem _lbv8 var_u207 bv0) (set481 bv0)))
                  (= var_u207 x0)))
        (a!19 (= (forall ((bv0 Int)) (= (shd v bv0) (set483 bv0)))
                 (= var_u207 x0)))
        (a!20 (=> (forall ((bv0 Int)) (= (shd v bv0) (set485 bv0)))
                  (forall ((bv0 Bool)) (= (smem v var_u207 bv0) (set484 bv0))))))
  (let ((a!13 (= (forall ((bv0 Bool)) (= (smem v var_u205 bv0) (set475 bv0)))
                 a!12))
        (a!18 (= (forall ((bv0 Bool)) (= (smem v var_u207 bv0) (set482 bv0)))
                 a!17)))
    (and (forall ((bv0 Bool)) (= (smem nil var_u200 bv0) (set464 bv0)))
         a!1
         (= (slen nil) 0)
         (or (> s |0|) (= s |0|))
         (= _lbv0 (- x0 1))
         (= _lbv1 (- s 1))
         a!2
         a!3
         a!4
         a!5
         a!6
         a!7
         (= (slen _lbv6) _lbv1)
         (forall ((bv0 Bool)) (= (ulist _lbv6 bv0) (set466 bv0)))
         a!8
         (= (slen _lbv7) _lbv1)
         (forall ((bv0 Bool)) (= (ulist _lbv7 bv0) (set468 bv0)))
         a!9
         (= (slen _lbv8) _lbv1)
         (forall ((bv0 Bool)) (= (ulist _lbv8 bv0) (set470 bv0)))
         a!10
         (= (slen _lbv9) _lbv1)
         (forall ((bv0 Bool)) (= (ulist _lbv9 bv0) (set472 bv0)))
         a!11
         a!13
         a!14
         a!15
         (= (slen v) (+ (slen _lbv8) 1))
         (= var_v42 true)
         a!7
         (= (slen _lbv8) _lbv1)
         (forall ((bv0 Bool)) (= (ulist _lbv8 bv0) (set479 bv0)))
         a!16
         a!18
         a!19
         a!20
         (= (slen v) (+ (slen _lbv8) 1)))))))
(assert (forall ((bv0 Bool)) (= (set486 bv0) (and (= bv0 true)))))
(assert (not (forall ((bv0 Bool)) (= (ulist v bv0) (set486 bv0)))))
(check-sat)
